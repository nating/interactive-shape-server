
==================== FINAL INTERFACE ====================
2017-11-25 13:25:02.765946 UTC

interface main@main:Styles 8002
  interface hash: 1abd4eaa9b29b2a28f6c198901e017d5
  ABI hash: 898256fb6ff72c359ee57f17c33e3512
  export-list hash: 3058baed442d158859a4a89f66429a17
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 52e25017ea2471189bd6f9d9f6dbdebf
  sig of: Nothing
  used TH splices: False
  where
exports:
  Styles.<->
  Styles.fill
  Styles.fillOpacity
  Styles.strokeColor
  Styles.strokeWidth
  Styles.style
  Styles.Style{Styles.Fill Styles.FillOpacity Styles.StrokeColor Styles.StrokeWidth Styles.StyleCompose}
module dependencies: Color
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-LxClHUTiKUUAxWtvJ5Oeoy
                      blaze-markup-0.8.0.0@blaze-markup-0.8.0.0-GsxkVbRgODkgUQDmmDVob
                      blaze-svg-0.3.6.1@blaze-svg-0.3.6.1-E6CYGgfBIFH476loEvWeGj
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      transformers-0.5.2.0@transformers-0.5.2.0
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Read b6821365d2d5fa2155c9e910160e7f57
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:Text.ParserCombinators.ReadPrec 5a182a8d6deb0f7d67aed5fab08a5cc0
import  -/  base-4.9.1.0:Text.Read.Lex 16199fac3c6c2d64cc7c268f3c0d2269
import  -/  blaze-markup-0.8.0.0@blaze-markup-0.8.0.0-GsxkVbRgODkgUQDmmDVob:Text.Blaze.Internal c1d6ebf18cc7de440fbc2d1a2a795843
import  -/  blaze-svg-0.3.6.1@blaze-svg-0.3.6.1-E6CYGgfBIFH476loEvWeGj:Text.Blaze.Svg.Renderer.Utf8 e2f4642473b16a8cdce3ca89f311d0be
import  -/  blaze-svg-0.3.6.1@blaze-svg-0.3.6.1-E6CYGgfBIFH476loEvWeGj:Text.Blaze.Svg11 ffe4dbf1048c9a6d5d9dad94ecced8e8
import  -/  blaze-svg-0.3.6.1@blaze-svg-0.3.6.1-E6CYGgfBIFH476loEvWeGj:Text.Blaze.Svg11.Attributes 2eac472bb3ab7f6d74496a530091d88d
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  Color 2935b0eb0a35754b0cfb6f214fe514e1
  exports: 7109e79c67e21887557bf29e62da926b
  Color a20acb4243024fa85fb7a9389cdd11b4
b504683295811bfa8dea5aa3e1f1859c
  $fReadStyle :: GHC.Read.Read Styles.Style
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Styles.Style
                  Styles.$fReadStyle_$creadsPrec
                  Styles.$fReadStyle_$creadList
                  Styles.$fReadStyle_$creadPrec
                  Styles.$fReadStyle_$creadListPrec -}
b504683295811bfa8dea5aa3e1f1859c
  $fReadStyle1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([Styles.Style] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [Styles.Style] -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.list1
                   @ Styles.Style
                   Styles.$fReadStyle2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Styles.Style>_R))
                   eta
                   @ b
                   eta1) -}
b504683295811bfa8dea5aa3e1f1859c
  $fReadStyle2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP Styles.Style
  {- Arity: 1,
     Unfolding: (GHC.Read.parens1
                   @ Styles.Style
                   Styles.$fReadStyle3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Styles.Style>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Styles.Style>_R)))) -}
b504683295811bfa8dea5aa3e1f1859c
  $fReadStyle3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Styles.Style -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w8 :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w9 :: Styles.Style -> Text.ParserCombinators.ReadP.P b) ->
                 case w8 of ww { GHC.Types.I# ww1 ->
                 Styles.$w$creadPrec ww1 @ b w9 }) -}
b504683295811bfa8dea5aa3e1f1859c
  $fReadStyle4 :: Text.ParserCombinators.ReadP.P [Styles.Style]
  {- Unfolding: (GHC.Read.list1
                   @ Styles.Style
                   Styles.$fReadStyle2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Styles.Style>_R))
                   GHC.Read.$fRead()5
                   @ [Styles.Style]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Styles.Style])) -}
b504683295811bfa8dea5aa3e1f1859c
  $fReadStyle_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [Styles.Style]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Styles.Style]
                   Styles.$fReadStyle4) -}
b504683295811bfa8dea5aa3e1f1859c
  $fReadStyle_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [Styles.Style]
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Styles.$fReadStyle1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[Styles.Style]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[Styles.Style]>_R))) -}
b504683295811bfa8dea5aa3e1f1859c
  $fReadStyle_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec Styles.Style
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Styles.$fReadStyle2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <Styles.Style>_R)) -}
b504683295811bfa8dea5aa3e1f1859c
  $fReadStyle_$creadsPrec ::
    GHC.Types.Int -> Text.ParserCombinators.ReadP.ReadS Styles.Style
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ Styles.Style
                   ((GHC.Read.parens1
                       @ Styles.Style
                       Styles.$fReadStyle3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <Styles.Style>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <Styles.Style>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <Styles.Style>_R)
                      @ Styles.Style
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ Styles.Style))) -}
b504683295811bfa8dea5aa3e1f1859c
  $fShowStyle :: GHC.Show.Show Styles.Style
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Styles.Style
                  Styles.$fShowStyle_$cshowsPrec
                  Styles.$fShowStyle_$cshow
                  Styles.$fShowStyle_$cshowList -}
b504683295811bfa8dea5aa3e1f1859c
  $fShowStyle1 :: Styles.Style -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w8 :: Styles.Style) ->
                 Styles.$w$cshowsPrec 0# w8) -}
b504683295811bfa8dea5aa3e1f1859c
  $fShowStyle_$cshow :: Styles.Style -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Styles.Style) ->
                 Styles.$fShowStyle_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
b504683295811bfa8dea5aa3e1f1859c
  $fShowStyle_$cshowList :: [Styles.Style] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Styles.Style
                   Styles.$fShowStyle1) -}
b504683295811bfa8dea5aa3e1f1859c
  $fShowStyle_$cshowsPrec ::
    GHC.Types.Int -> Styles.Style -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w8 :: GHC.Types.Int) (w9 :: Styles.Style) ->
                 case w8 of ww { GHC.Types.I# ww1 ->
                 Styles.$w$cshowsPrec ww1 w9 }) -}
3c8f5f24d79442d79ccdf8150fb40179
  $tc'Fill :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7989562443669636313##
                   3593034859679676410##
                   Styles.$trModule
                   Styles.$tc'Fill1) -}
6a3902cbed8a31e33b730b952a314617
  $tc'Fill1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Fill"#) -}
5aea96212873ea3cb27f6ac63a41a82a
  $tc'FillOpacity :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4200095713175223685##
                   15219772679044608442##
                   Styles.$trModule
                   Styles.$tc'FillOpacity1) -}
25cbe97ea10ea5ba3407b046838dcc57
  $tc'FillOpacity1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'FillOpacity"#) -}
db02fbc9bf5adf7e0a4dcc8e18dd570f
  $tc'StrokeColor :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17699982438542583502##
                   11781939214338397191##
                   Styles.$trModule
                   Styles.$tc'StrokeColor1) -}
ecbe1883c02063339762ad54029d61c4
  $tc'StrokeColor1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'StrokeColor"#) -}
c7e2fb02784871f0c2162fec00cbbc8b
  $tc'StrokeWidth :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11546852379588257288##
                   17595460033712268564##
                   Styles.$trModule
                   Styles.$tc'StrokeWidth1) -}
723a757ec8b81b3792bb6565b614b108
  $tc'StrokeWidth1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'StrokeWidth"#) -}
1f3bb9389f7e446a2217855cd91e2fa4
  $tc'StyleCompose :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15385799786221577039##
                   2596703828331920346##
                   Styles.$trModule
                   Styles.$tc'StyleCompose1) -}
c5182f18433d97f069bb2ed016988501
  $tc'StyleCompose1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'StyleCompose"#) -}
0915c75cdd18a42bd74fd2ed5b4c6589
  $tcStyle :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   354990488821868158##
                   9290133946383018855##
                   Styles.$trModule
                   Styles.$tcStyle1) -}
7d7bc98803abe3ac6ed6dfc325bef48e
  $tcStyle1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Style"#) -}
eeafbd87328155a41ded15f0bd3843a5
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Styles.$trModule2
                   Styles.$trModule1) -}
a19bc2f08e5fdcd7b949741c3b0a5b5f
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Styles"#) -}
ad106efe0ddb3e9315f8d274a517c0fb
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
b504683295811bfa8dea5aa3e1f1859c
  $w$creadPrec ::
    GHC.Prim.Int#
    -> forall b.
       (Styles.Style -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [0] -}
b504683295811bfa8dea5aa3e1f1859c
  $w$cshowsPrec :: GHC.Prim.Int# -> Styles.Style -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
33aac435abc59c9a889813eed2a18582
  (<->) :: Styles.Style -> Styles.Style -> Styles.Style
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>m5,
     Unfolding: InlineRule (0, True, True) Styles.StyleCompose -}
b504683295811bfa8dea5aa3e1f1859c
  data Style
    = Fill Color.Color
    | FillOpacity GHC.Types.Double
    | StrokeWidth GHC.Types.Double
    | StrokeColor Color.Color
    | StyleCompose Styles.Style Styles.Style
dcf1b8f79845ee82622a5a577a224287
  fill :: Color.Color -> Styles.Style
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m1,
     Unfolding: InlineRule (0, True, True) Styles.Fill -}
14e993e65e1f082afefe5a1b6986f379
  fillOpacity :: GHC.Types.Double -> Styles.Style
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (0, True, True) Styles.FillOpacity -}
430880bc57125908f4516e6b8957e520
  strokeColor :: Color.Color -> Styles.Style
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m4,
     Unfolding: InlineRule (0, True, True) Styles.StrokeColor -}
8ae2c23d0ca0b0f17c418e3fc31c63ad
  strokeWidth :: GHC.Types.Double -> Styles.Style
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m3,
     Unfolding: InlineRule (0, True, True) Styles.StrokeWidth -}
0076424df4d3671d1d7019670c46b108
  style :: Styles.Style -> [Text.Blaze.Internal.Attribute]
  {- Arity: 1, Strictness: <S,1*U> -}
instance GHC.Read.Read [Styles.Style] = Styles.$fReadStyle
instance GHC.Show.Show [Styles.Style] = Styles.$fShowStyle
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

